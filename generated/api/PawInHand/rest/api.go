// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * PawInHand API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

package modules

import (
	"context"
	"net/http"
	"os"
)

// AdsAPIRouter defines the required methods for binding the api requests to a responses for the AdsAPI
// The AdsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AdsAPIServicer to perform the required actions, then write the service results to the http response.
type AdsAPIRouter interface {
	CreateAd(http.ResponseWriter, *http.Request)
	DeleteAdById(http.ResponseWriter, *http.Request)
	GetAdById(http.ResponseWriter, *http.Request)
	GetAllAds(http.ResponseWriter, *http.Request)
	UpdateAdById(http.ResponseWriter, *http.Request)
}

// AuthenticationAPIRouter defines the required methods for binding the api requests to a responses for the AuthenticationAPI
// The AuthenticationAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AuthenticationAPIServicer to perform the required actions, then write the service results to the http response.
type AuthenticationAPIRouter interface {
	LoginUser(http.ResponseWriter, *http.Request)
	LogoutUser(http.ResponseWriter, *http.Request)
}

// MediaAPIRouter defines the required methods for binding the api requests to a responses for the MediaAPI
// The MediaAPIRouter implementation should parse necessary information from the http request,
// pass the data to a MediaAPIServicer to perform the required actions, then write the service results to the http response.
type MediaAPIRouter interface {
	UploadPicture(http.ResponseWriter, *http.Request)
}

// PostsAPIRouter defines the required methods for binding the api requests to a responses for the PostsAPI
// The PostsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a PostsAPIServicer to perform the required actions, then write the service results to the http response.
type PostsAPIRouter interface {
	CreatePost(http.ResponseWriter, *http.Request)
	DeletePostById(http.ResponseWriter, *http.Request)
	GetAllPosts(http.ResponseWriter, *http.Request)
	GetPostById(http.ResponseWriter, *http.Request)
	UpdatePostById(http.ResponseWriter, *http.Request)
}

// RatingAPIRouter defines the required methods for binding the api requests to a responses for the RatingAPI
// The RatingAPIRouter implementation should parse necessary information from the http request,
// pass the data to a RatingAPIServicer to perform the required actions, then write the service results to the http response.
type RatingAPIRouter interface {
	RateUser(http.ResponseWriter, *http.Request)
}

// UserAPIRouter defines the required methods for binding the api requests to a responses for the UserAPI
// The UserAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UserAPIServicer to perform the required actions, then write the service results to the http response.
type UserAPIRouter interface {
	GetAll(http.ResponseWriter, *http.Request)
	GetUserById(http.ResponseWriter, *http.Request)
	RegisterUser(http.ResponseWriter, *http.Request)
	UpdateUserById(http.ResponseWriter, *http.Request)
}

// VolunteerAPIRouter defines the required methods for binding the api requests to a responses for the VolunteerAPI
// The VolunteerAPIRouter implementation should parse necessary information from the http request,
// pass the data to a VolunteerAPIServicer to perform the required actions, then write the service results to the http response.
type VolunteerAPIRouter interface {
	CreateVolunteerWork(http.ResponseWriter, *http.Request)
	DeleteVolunteerWorkById(http.ResponseWriter, *http.Request)
	GetAllVolunteerWork(http.ResponseWriter, *http.Request)
	GetVolunteerWorkById(http.ResponseWriter, *http.Request)
	RegisterForVolunteerWork(http.ResponseWriter, *http.Request)
}

// AdsAPIServicer defines the api actions for the AdsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AdsAPIServicer interface {
	CreateAd(context.Context, Ad) (ImplResponse, error)
	DeleteAdById(context.Context, string) (ImplResponse, error)
	GetAdById(context.Context, string) (ImplResponse, error)
	GetAllAds(context.Context) (ImplResponse, error)
	UpdateAdById(context.Context, string, Ad) (ImplResponse, error)
}

// AuthenticationAPIServicer defines the api actions for the AuthenticationAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AuthenticationAPIServicer interface {
	LoginUser(context.Context, Login) (ImplResponse, error)
	LogoutUser(context.Context) (ImplResponse, error)
}

// MediaAPIServicer defines the api actions for the MediaAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type MediaAPIServicer interface {
	UploadPicture(context.Context, *os.File) (ImplResponse, error)
}

// PostsAPIServicer defines the api actions for the PostsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PostsAPIServicer interface {
	CreatePost(context.Context, Post) (ImplResponse, error)
	DeletePostById(context.Context, string) (ImplResponse, error)
	GetAllPosts(context.Context) (ImplResponse, error)
	GetPostById(context.Context, string) (ImplResponse, error)
	UpdatePostById(context.Context, string, Post) (ImplResponse, error)
}

// RatingAPIServicer defines the api actions for the RatingAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RatingAPIServicer interface {
	RateUser(context.Context, string, Rating) (ImplResponse, error)
}

// UserAPIServicer defines the api actions for the UserAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UserAPIServicer interface {
	GetAll(context.Context) (ImplResponse, error)
	GetUserById(context.Context, string) (ImplResponse, error)
	RegisterUser(context.Context, User) (ImplResponse, error)
	UpdateUserById(context.Context, string, User) (ImplResponse, error)
}

// VolunteerAPIServicer defines the api actions for the VolunteerAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type VolunteerAPIServicer interface {
	CreateVolunteerWork(context.Context, VolunteerWork) (ImplResponse, error)
	DeleteVolunteerWorkById(context.Context, string) (ImplResponse, error)
	GetAllVolunteerWork(context.Context) (ImplResponse, error)
	GetVolunteerWorkById(context.Context, string) (ImplResponse, error)
	RegisterForVolunteerWork(context.Context, string, VolunteerRegistration) (ImplResponse, error)
}
