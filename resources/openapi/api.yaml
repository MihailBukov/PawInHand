openapi: 3.0.3
info:
  title: PawInHand API
  version: 1.0.0

servers:
  - url: /api

paths:
  /auth/login:
    post:
      description: "Authenticate user and return a token."
      tags:
        - auth
      operationId: LoginUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Login successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "401":
          description: Invalid credentials.
  /auth/logout:
    post:
      description: "Logout the authenticated user."
      tags:
        - auth
      operationId: LogoutUser
      responses:
        "200":
          description: Logout successful.
        "401":
          description: Unauthorized.

  /users:
    get:
      description: "Get all user data. Only Admin can access this endpoint."
      tags:
        - user
      operationId: GetAllUsers
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      description: "Create a new user or shelter account. Shelter accounts require admin approval."
      tags:
        - user
      operationId: RegisterUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User created successfully.

  /users/{userId}:
    get:
      description: "Retrieve user profile by userId."
      tags:
        - user
      operationId: GetUserById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /shelters:
    get:
      description: "Retrieve all shelter data."
      tags:
        - shelter
      operationId: GetAllShelters
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Shelter"
    post:
      description: "Register a new shelter. Requires admin approval."
      tags:
        - shelter
      operationId: RegisterShelter
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Shelter"
      responses:
        "201":
          description: Shelter registered successfully.

  /shelters/{shelterId}:
    get:
      description: "Retrieve details of a specific shelter by shelterId."
      tags:
        - shelter
      operationId: GetShelterById
      parameters:
        - name: shelterId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shelter"
    put:
      description: "Update details of a specific shelter by shelterId."
      tags:
        - shelter
      operationId: UpdateShelterById
      parameters:
        - name: shelterId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Shelter"
      responses:
        "200":
          description: Shelter updated successfully.
    delete:
      description: "Delete a shelter by shelterId."
      tags:
        - shelter
      operationId: DeleteShelterById
      parameters:
        - name: shelterId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Shelter deleted successfully.

  /ads:
    get:
      description: "Retrieve all animal adoption ads."
      tags:
        - ads
      operationId: GetAllAds
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ad"

    post:
      description: "Create a new adoption ad."
      tags:
        - ads
      operationId: CreateAd
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ad"
      responses:
        "201":
          description: Ad created successfully.

  /ads/{adId}:
    get:
      description: "Retrieve details of a specific ad by adId."
      tags:
        - ads
      operationId: GetAdById
      parameters:
        - name: adId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ad"
    put:
      description: "Update details of a specific ad by adId."
      tags:
        - ads
      operationId: UpdateAdById
      parameters:
        - name: adId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ad"
      responses:
        "200":
          description: Ad updated successfully.
    delete:
      description: "Delete an ad by adId."
      tags:
        - ads
      operationId: DeleteAdById
      parameters:
        - name: adId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Ad deleted successfully.

  /events:
    get:
      description: "Retrieve upcoming events."
      tags:
        - events
      operationId: GetEvents
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"

    post:
      description: "Create a new event."
      tags:
        - events
      operationId: CreateEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
      responses:
        "201":
          description: Event created successfully.

  /posts:
    get:
      description: "Retrieve all posts."
      tags:
        - posts
      operationId: GetAllPosts
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Post"

    post:
      description: "Create a new post."
      tags:
        - posts
      operationId: CreatePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Post"
      responses:
        "201":
          description: Post created successfully.

  /posts/{postId}:
    get:
      description: "Retrieve details of a specific post by postId."
      tags:
        - posts
      operationId: GetPostById
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
    put:
      description: "Update a specific post by postId."
      tags:
        - posts
      operationId: UpdatePostById
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Post"
      responses:
        "200":
          description: Post updated successfully.
    delete:
      description: "Delete a post by postId."
      tags:
        - posts
      operationId: DeletePostById
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Post deleted successfully.

  /volunteer-work/{workId}/register:
    post:
      description: "Register for a specific volunteer activity."
      tags:
        - volunteer
      operationId: RegisterForVolunteerWork
      parameters:
        - name: workId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VolunteerWork"
      responses:
        "201":
          description: Successfully registered.

  /upload/picture:
    post:
      description: "Upload a picture."
      tags:
        - media
      operationId: UploadPicture
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "201":
          description: Picture uploaded successfully.

  /users/{userId}/rate:
    post:
      description: "Rate a user or shelter by userId."
      tags:
        - rating
      operationId: RateUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rating"
      responses:
        "201":
          description: Rating submitted successfully.

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        username:
          type: string
    Shelter:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        address:
          type: object
          properties:
            street:
              type: string
            city:
              type: string
            state:
              type: string
            zip:
              type: string
        phone:
          type: string
        email:
          type: string
    Ad:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        dateCreated:
          type: string
          format: date
        image:
          type: string
        shelterId:
          type: string
    Post:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        authorId:
          type: string
        dateCreated:
          type: string
          format: date
        image:
          type: string
    Event:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        date:
          type: string
          format: date
    Rating:
      type: object
      properties:
        score:
          type: integer
          format: int32
        comment:
          type: string
    VolunteerWork:
      type: object
      required:
        - title
        - description
      properties:
        id:
          type: string
        userId:
          type: string
        title:
          type: string
        description:
          type: string
        date:
          type: string
          format: date
        location:
          type: object
          properties:
            venue:
              type: string
            city:
              type: string
            state:
              type: string
    Error:
      type: object
      properties:
        key:
          type: string
        description:
          type: string
