openapi: 3.0.3
info:
  title: PawInHand API
  version: 1.0.0

servers:
  - url: /api

paths:
  /users:
    get:
      description: "Get all user data. Only Admin can access this endpoint."
      tags:
        - user
      operationId: GetAll
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "400":
          description: Malformed or invalid payload.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "BAD_REQUEST"
                description: "Request payload is either missing or invalid"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "INTERNAL_SERVER_ERROR"
                description: "An unexpected server error occurred"
    post:
      description: "Create a new user."
      tags:
        - user
      operationId: RegisterUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User created successfully.
        "400":
          description: Malformed or invalid payload.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "BAD_REQUEST"
                description: "Request payload is either missing or invalid"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "INTERNAL_SERVER_ERROR"
                description: "An unexpected server error occurred"

  /users/{userId}:
    get:
      description: "Get user profile data by userId."
      tags:
        - user
      operationId: GetUserById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Malformed or invalid payload.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "BAD_REQUEST"
                description: "Request payload is either missing or invalid"
        "410":
          description: City not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "NOT_FOUND"
                description: "The resource you requested cannot be found"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "INTERNAL_SERVER_ERROR"
                description: "An unexpected server error occurred"
    put:
      description: "Update user profile by userId."
      tags:
        - user
      operationId: UpdateUserById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Malformed or invalid payload.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "BAD_REQUEST"
                description: "Request payload is either missing or invalid"
        "410":
          description: City not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "NOT_FOUND"
                description: "The resource you requested cannot be found"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "INTERNAL_SERVER_ERROR"
                description: "An unexpected server error occurred"

  /login:
    post:
      description: "Log in with user credentials."
      tags:
        - authentication
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        "200":
          description: Login successful. Session token provided.
        "400":
          description: Malformed or invalid payload.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "BAD_REQUEST"
                description: "Request payload is either missing or invalid"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "INTERNAL_SERVER_ERROR"
                description: "An unexpected server error occurred"

  /logout:
    post:
      description: "Log out and invalidate the session token."
      tags:
        - authentication
      operationId: logoutUser
      responses:
        "204":
          description: Logout successful.

  /ads:
    get:
      description: "Get all animal ads."
      tags:
        - ads
      operationId: GetAllAds
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ad"
        "400":
          description: Malformed or invalid payload.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "BAD_REQUEST"
                description: "Request payload is either missing or invalid"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "INTERNAL_SERVER_ERROR"
                description: "An unexpected server error occurred"
    post:
      description: "Create a new ad."
      tags:
        - ads
      operationId: CreateAd
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ad"
      responses:
        "201":
          description: Ad created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ad"
        "400":
          description: Malformed or invalid payload.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "BAD_REQUEST"
                description: "Request payload is either missing or invalid"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "INTERNAL_SERVER_ERROR"
                description: "An unexpected server error occurred"

  /ads/{adId}:
    get:
      description: "Get details of a specific ad by adId."
      tags:
        - ads
      operationId: GetAdById
      parameters:
        - name: adId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ad"
        "400":
          description: Malformed or invalid payload.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "BAD_REQUEST"
                description: "Request payload is either missing or invalid"
        "410":
          description: City not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "NOT_FOUND"
                description: "The resource you requested cannot be found"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "INTERNAL_SERVER_ERROR"
                description: "An unexpected server error occurred"
    put:
      description: "Update an ad by adId."
      tags:
        - ads
      operationId: UpdateAdById
      parameters:
        - name: adId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ad"
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ad"
        "400":
          description: Malformed or invalid payload.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "BAD_REQUEST"
                description: "Request payload is either missing or invalid"
        "410":
          description: City not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "NOT_FOUND"
                description: "The resource you requested cannot be found"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "INTERNAL_SERVER_ERROR"
                description: "An unexpected server error occurred"
    delete:
      description: "Delete an ad by adId."
      tags:
        - ads
      operationId: DeleteAdById
      parameters:
        - name: adId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Success.
        "400":
          description: Malformed or invalid payload.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "BAD_REQUEST"
                description: "Request payload is either missing or invalid"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "INTERNAL_SERVER_ERROR"
                description: "An unexpected server error occurred"

  /volunteer-work:
    get:
      description: "Get all volunteer work opportunities."
      tags:
        - volunteer
      operationId: GetAllVolunteerWork
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VolunteerWork"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "INTERNAL_SERVER_ERROR"
                description: "An unexpected server error occurred"
    post:
      description: "Create a new volunteer work opportunity."
      tags:
        - volunteer
      operationId: CreateVolunteerWork
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VolunteerWork"
      responses:
        "201":
          description: Volunteer work opportunity created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VolunteerWork"
        "400":
          description: Malformed or invalid payload.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "BAD_REQUEST"
                description: "Request payload is either missing or invalid"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "INTERNAL_SERVER_ERROR"
                description: "An unexpected server error occurred"

  /volunteer-work/{workId}:
    get:
      description: "Get details of a specific volunteer work opportunity by workId."
      tags:
        - volunteer
      operationId: GetVolunteerWorkById
      parameters:
        - name: workId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VolunteerWork"
        "400":
          description: Malformed or invalid payload.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "BAD_REQUEST"
                description: "Request payload is either missing or invalid"
        "410":
          description: City not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "NOT_FOUND"
                description: "The resource you requested cannot be found"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "INTERNAL_SERVER_ERROR"
                description: "An unexpected server error occurred"

    delete:
      description: "Delete a volunteer work opportunity by workId."
      tags:
        - volunteer
      operationId: DeleteVolunteerWorkById
      parameters:
        - name: workId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Volunteer work opportunity deleted successfully.

  /posts:
    get:
      description: "Get all posts."
      tags:
        - posts
      operationId: GetAllPosts
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Post"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "INTERNAL_SERVER_ERROR"
                description: "An unexpected server error occurred"

    post:
      description: "Create a new post."
      tags:
        - posts
      operationId: CreatePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Post"
      responses:
        "201":
          description: Post created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        "400":
          description: Malformed or invalid payload.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "BAD_REQUEST"
                description: "Request payload is either missing or invalid"


  /posts/{postId}:
    get:
      description: "Get details of a specific post by postId."
      tags:
        - posts
      operationId: GetPostById
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        "410":
          description: City not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                key: "NOT_FOUND"
                description: "The resource you requested cannot be found"
    put:
      description: "Update a post by postId."
      tags:
        - posts
      operationId: UpdatePostById
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Post"
      responses:
        "200":
          description: Post updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
    delete:
      description: "Delete a post by postId."
      tags:
        - posts
      operationId: DeletePostById
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Post deleted successfully.

  /volunteer-work/{workId}/register:
    post:
      description: "Register for a specific volunteer work opportunity."
      tags:
        - volunteer
      operationId: RegisterForVolunteerWork
      parameters:
        - name: workId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VolunteerRegistration"
      responses:
        "201":
          description: Successfully registered for the volunteer work.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VolunteerRegistration"

  /upload/picture:
    post:
      description: "Upload a picture."
      tags:
        - media
      operationId: UploadPicture
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "201":
          description: Picture uploaded successfully.

  /users/{userId}/rate:
    post:
      description: "Rate a user or shelter by userId."
      tags:
        - rating
      operationId: RateUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rating"
      responses:
        "201":
          description: Rating submitted successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rating"

components:
  schemas:
    User:
      type: object
      required:
        - firstName
        - lastName
        - email
        - username
      properties:
        id:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        username:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: object
          properties:
            street:
              type: string
            city:
              type: string
            state:
              type: string
            zip:
              type: string
        role:
          type: string
    Login:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    Ad:
      type: object
      required:
        - title
        - description
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        shelterId:
          type: string
        dateCreated:
          type: string
          format: date
        images:
          type: array
          items:
            type: string
    VolunteerWork:
      type: object
      required:
        - title
        - description
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        date:
          type: string
          format: date
        location:
          type: object
          properties:
            venue:
              type: string
            city:
              type: string
            state:
              type: string
    Post:
      type: object
      required:
        - title
        - content
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        authorId:
          type: string
        dateCreated:
          type: string
          format: date
        images:
          type: array
          items:
            type: string
    VolunteerRegistration:
      type: object
      required:
        - userId
      properties:
        userId:
          type: string
        preferences:
          type: string
    Rating:
      type: object
      required:
        - score
        - comment
      properties:
        score:
          type: integer
          format: int32
        comment:
          type: string
    Error:
      type: object
      required:
        - key
        - description
      properties:
        key:
          type: string
          example: "BAD_REQUEST"
        description:
          type: string
          example: "Request payload is either missing or invalid"
